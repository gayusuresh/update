<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="inheritance.Programmer"/>
    <fullyQualifiedTypeName name="inheritance.HDFCPune"/>
    <fullyQualifiedTypeName name="inheritance.BatsMan"/>
    <fullyQualifiedTypeName name="abstraction.Rectangle"/>
    <fullyQualifiedTypeName name="variabletypes.VariableDemo"/>
    <fullyQualifiedTypeName name="polymorphism.OverExample"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="java.util.InputMismatchException"/>
    <fullyQualifiedTypeName name="java.text.SimpleDateFormat"/>
    <fullyQualifiedTypeName name="java.time.LocalDate"/>
    <fullyQualifiedTypeName name="javax.lang.model.element.Element"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="java.lang.Comparable"/>
    <fullyQualifiedTypeName name="java.util.Comparator"/>
    <fullyQualifiedTypeName name="comparatorEx.ProductsSort"/>
    <fullyQualifiedTypeName name="filehandling.FileInputExample"/>
    <fullyQualifiedTypeName name="java.io.FileOutputStream"/>
    <fullyQualifiedTypeName name="java.io.ObjectOutputStream"/>
    <fullyQualifiedTypeName name="java.io.Serializable"/>
    <fullyQualifiedTypeName name="java.io.FileInputStream"/>
    <fullyQualifiedTypeName name="java.io.ObjectInputStream"/>
    <fullyQualifiedTypeName name="SingleThreadExample"/>
    <fullyQualifiedTypeName name="threadexample.MultiThreadDemo"/>
    <fullyQualifiedTypeName name="java.io.File"/>
    <fullyQualifiedTypeName name="java.io.FileWriter"/>
    <fullyQualifiedTypeName name="java.io.BufferedReader"/>
    <fullyQualifiedTypeName name="java.io.FileReader"/>
    <fullyQualifiedTypeName name="filehandling.StudentFileReader"/>
    <fullyQualifiedTypeName name="org.junit.Before"/>
    <fullyQualifiedTypeName name="org.junit.After"/>
    <fullyQualifiedTypeName name="unittesting.EvenNumber"/>
    <fullyQualifiedTypeName name="junit.framework.TestCase"/>
    <fullyQualifiedTypeName name="org.mockito.junit.MockitoJUnitRunner"/>
    <fullyQualifiedTypeName name="org.mockito.InjectMocks"/>
    <fullyQualifiedTypeName name="org.mockito.Mock"/>
    <fullyQualifiedTypeName name="org.junit.Test"/>
    <fullyQualifiedTypeName name="org.junit.Assert"/>
    <fullyQualifiedTypeName name="org.junit.runner.JUnitCore"/>
    <fullyQualifiedTypeName name="org.junit.runner.Result"/>
    <fullyQualifiedTypeName name="com.demo.MainApplication"/>
    <fullyQualifiedTypeName name="com.demo.CalculateService"/>
    <fullyQualifiedTypeName name="lambadaexp.DrawableMain"/>
    <fullyQualifiedTypeName name="lambadaexp.Drawable"/>
    <fullyQualifiedTypeName name="lambadaexp.Addition"/>
    <fullyQualifiedTypeName name="java.lang.FunctionalInterface"/>
    <fullyQualifiedTypeName name="lambadaexp.TestInterface"/>
    <fullyQualifiedTypeName name="java.util.Random"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.util.stream.Stream"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="serviceImpl.EmployeeImplementation"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="DecoratorDesignPattern.FoodDecorator"/>
    <fullyQualifiedTypeName name="DecoratorDesignPattern.VegFood"/>
    <fullyQualifiedTypeName name="facadedesignpattern.MobileShop"/>
    <fullyQualifiedTypeName name="java.util.Scanner"/>
    <fullyQualifiedTypeName name="java.util.Iterator"/>
</qualifiedTypeNameHistroy>
